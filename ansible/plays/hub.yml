## Manages a JuptyerHub installation
---
- name: Setup generic environment
  hosts: hub
  tasks:
    # N.B. On hosts where systemd-hostnamectl is disabled
    # This task will fail. Comment it out or find a way to make
    # systemd-hostnamectl less garbage.
    - name: Ensure hostname is set
      become: true
      tags: ["hostname"]
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"

    # Add relevant keys to `ssh_public_keys`
    # in either host_vars, group_vars, or local_vars.
    - name: Manage SSH public keys
      tags: ["ssh"]
      ansible.posix.authorized_key:
        user: "{{ item.value.user }}"
        state: "{{ item.value.state }}"
        key: "{{ item.value.public_key }}"
      with_dict: "{{ ssh_public_keys }}"
      when: ssh_public_keys is defined

    - name: Install Base Packages
      become: true
      tags: ["base-packages"]
      ansible.builtin.yum:
        name: "{{ item }}"
        state: present
      with_items: "{{ base_packages }}"
      when: base_packages is defined

    - name: Update Process Limits
      become: true
      community.general.pam_limits:
        dest: '{{ item.dest }}'
        domain: '{{ item.domain }}'
        limit_type: '{{ item.limit_type }}'
        limit_item: '{{ item.limit_item }}'
        value: '{{ item.value }}'
      loop:
        - dest: /etc/security/limits.d/20-nproc.conf
          domain: '*'
          limit_type: soft
          limit_item: nproc
          value: 131072
        - dest: /etc/security/limits.d/20-nproc.conf
          domain: 'root'
          limit_type: soft
          limit_item: nproc
          value: 'unlimited'
        - dest: /etc/security/limits.d/20-nfiles.conf
          domain: '*'
          limit_type: soft
          limit_item: nofile
          value: 32768

    - name: Install Python Environment
      become: true
      tags:
        - python
      ansible.builtin.yum:
        name: "{{ item }}"
        state: present
      with_items:
        - python3.11
        - python3.11-pip
        - python3.11-devel

    - name: Set Python3.11 as the default
      become: true
      tags:
        - python
      community.general.alternatives:
        name: python3
        path: /usr/bin/python3.11
        link: /usr/bin/python3


    - name: Set pip3.11 as the default
      become: true
      tags:
        - python
      community.general.alternatives:
        name: pip3
        path: /usr/bin/pip3.11
        link: /usr/bin/pip3

    - name: Update Needs-Restarting python
      become: true
      tags:
        - python
      lineinfile:
        dest: /usr/bin/needs-restarting
        regexp: '^#!/usr/bin/python3$'
        line: '#!/usr/bin/python3.9'

    - name: Set SELinux as permissive
      become: true
      ansible.posix.selinux:
        policy: targeted
        state: permissive

    - name: Install firewalld
      become: true
      tags:
        - firewalld
      ansible.builtin.yum:
        name: firewalld
        state: present

    - name: Poke firewall holes
      become: true
      tags:
        - firewalld
      ansible.posix.firewalld:
        service: "{{ item.value.service }}"
        permanent: "{{ item.value.permanent | default('yes') }}"
        state: "{{ item.value.state }}"
        zone: "{{ item.value.zone }}"
      with_dict: "{{ firewalld_service_rules }}"
      when: firewalld_service_rules is defined

- name: Apply roles
  hosts: hub
  roles:
    - { role: geerlingguy.repo-epel, become: yes }
    - { role: weareinteractive.sudo, become: yes }
    - { role: devsec.hardening.ssh_hardening, become: yes }

    - role: sysstat
      become: yes

    - role: geerlingguy.apache
      become: yes
      tags:
        - httpd

    - role: dehydrated-letsencrypt
      become: yes
      tags:
        - httpd
        - ssl

    - role: zfs
      become: true
      tags:
        - zfs

    - role: zfs-snapshot
      become: true
      tags:
        - zfs

    - role: geerlingguy.docker
      become: yes
      tags:
        - docker
 
    - role: docker-extra
      become: yes
      tags:
        - docker

    - role: geerlingguy.nodejs
      become: yes
      tags:
        - nodejs
        - npm

    - role: jupyterhub
      become: yes
      tags:
        - jupyter
        - jupyterhub
 
    - role: rrsync
      become: yes
      vars:
        ansible_python_interpreter: /usr/bin/python3
      tags:
        - ssh
        - rrsync
        - backup

    - role: prometheus.prometheus.node_exporter
      become: yes
      tags:
        - prometheus
  
    - role: prometheus-target
      become: yes
      tags:
        - prometheus

# I didn't see a neat way of integrating this with geerlingguy.apache. It would
# be nice to use their role and reload apache that way, but for now...
- name: Wrap up tasks
  hosts: hub
  tasks:
    - name: Tweak apache mpm configuration
      become: true
      register: mpm
      ansible.builtin.blockinfile:
        path: /etc/httpd/conf.modules.d/00-mpm.conf
        block: |
          <IfModule mpm_worker_module>
            ServerLimit {{ httpd_serverlimit | default(256) }}
            StartServers {{ httpd_startservers | default(5) }}
            MinSpareThreads {{ httpd_minsparethreads | default(64) }}
            MaxSpareThreads {{ httpd_maxsparethreads | default(256) }}
            ThreadLimit {{ httpd_threadlimit | default(32) }}
            ThreadsPerChild {{ httpd_threadsperchild | default(32) }}
            MaxRequestWorkers {{ httpd_maxrequestworkers | default(8192) }}
          </IfModule>

    - name: Gracefully restart apache
      become: true
      service:
        name: httpd
        state: reloaded
      when: mpm.changed
