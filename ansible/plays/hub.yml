## Manages a JuptyerHub installation
---
- name: Setup generic environment
  hosts: hub
  tasks:
    - name: Ensure hostname is set
      become: true
      tags: ["hostname"]
      ansible.builtin.hostname:
        name: "{{ inventory_hostname }}"

    # Add relevant keys to `ssh_public_keys`
    # in either host_vars, group_vars, or local_vars.
    - name: Manage SSH public keys
      tags: ["ssh"]
      ansible.posix.authorized_key:
        user: "{{ item.value.user }}"
        state: "{{ item.value.state }}"
        key: "{{ item.value.public_key }}"
      with_dict: "{{ ssh_public_keys }}"
      when: ssh_public_keys is defined

    - name: Install Base Packages
      become: true
      tags: ["base-packages"]
      ansible.builtin.yum:
        name: "{{ item }}"
        state: present
      with_items: "{{ base_packages }}"
      when: base_packages is defined

    - name: Set SELinux as permissive
      become: true
      ansible.posix.selinux:
        policy: targeted
        state: permissive

    - name: Install firewalld
      become: true
      tags:
        - firewalld
      ansible.builtin.yum:
        name: firewalld
        state: present

    - name: Poke firewall holes
      become: true
      tags:
        - firewalld
      ansible.posix.firewalld:
        service: "{{ item.value.service }}"
        permanent: "{{ item.value.permanent | default('yes') }}"
        state: "{{ item.value.state }}"
        zone: "{{ item.value.zone }}"
      with_dict: "{{ firewalld_service_rules }}"
      when: firewalld_service_rules is defined

  roles:
    - { role: geerlingguy.repo-epel, become: yes }
    - { role: weareinteractive.sudo, become: yes }
    - role: zfs
      become: true
      tags:
        - zfs
    - role: zfs-snapshot
      become: true
      tags:
        - zfs

# 
#     # Configuration is stored in
#     # group_vars/<group>/ssh.yml.
#     - name: Ensure sshd is installed and running
#       tags: ["sshd"]
#       include_role:
#         name: sshd
# 
#     # Configuration is stored in
#     # group_vars/<group>/httpd.yml
#     - name: Manage Apache
#       tags: ["httpd"]
#       include_role:
#         name: httpd24-httpd
# 
#     # This requires the hub to have a resolvable FQDN.
#     - name: Configure letsencrypt
#       tags: ["ssl", "letsencrypt", "httpd"]
#       include_role:
#         name: dehydrate-letsencrypt
# 
#     - name: Manage Python3
#       tags: ["python", "python3"]
#       include_role:
#         name: python38
#     
#     # Manage Docker
#     - name: Manage Docker
#       include_role:
#         name: docker
# 
#     - name: Add Ansible user to docker group
#       include_role:
#         name: docker-extra
# 
#     # Manage nvidia-docker2
#     - name: Manage nvidia-docker2
#       include_role:
#         name: nvidia-docker
#       when: nvidia_docker_install|default(False)
# 
#     - name: update facts if docker0 is not defined
#       action: setup filter="ansible_docker0"
#       when: ansible_docker0 is not defined
# 
#     - name: Install docker module
#       yum:
#         name: 'python-docker-py'
#         state: 'present'
#     
#     - name: Manage Docker storage
#       include_role:
#         name: docker-storage
# 
#     - name: Manage NodeJS
#       tags: ["nodejs", "npm"]
#       include_role:
#         name: nodejs
# 
#     - name: Manage Jupyterhub
#       tags: ["jupyter", "jupyterhub"]
#       include_role:
#         name: jupyterhub
# 
#     - name: Manage rrsync
#       tags: ["ssh", "rrsync", "backup"]
#       include_role:
#         name: rrsync
