---

- name: Manage landing page html repo
  include_role:
    name: '{{ jupyterhub_html_family }}'

- name: Manage dockerspawner
  include_role:
    name: dockerspawner

- name: Manage Jupyterhub Docker Cull
  pip:
    name: jupyterhub-idle-culler
    executable: '{{ python3_pip_executable }}'

- name: Get Docker image for JupyterHub containers
  docker_image:
    name: '{{ jupyterhub_docker_container }}'
    source: pull
  when: jupyterhub_spawner in ['dockerspawner', 'syzygyswiftspawner']

- name: Manage syzygyauthenticator
  include_role:
    name: syzygyauthenticator

- name: Install OAuthenticator
  pip: name='oauthenticator' executable='{{ python3_pip_executable }}'
  when: jupyterhub_authenticator == 'google'

- name: Install LTIAuthenticator
  pip: name='jupyterhub-ltiauthenticator' executable='{{ python3_pip_executable }}'
  when: jupyterhub_authenticator == 'ltiauthenticator'

- name: Add a jupyter user to run things as
  user:
    name: '{{ jupyterhub_user_name }}'
    uid: '{{ jupyterhub_user_uid }}'

- name: Install pycurl dependencies
  yum:
    name: '{{ item.name }}'
    state: '{{ item.state }}'
    update_cache: yes
  with_items:
    - { 'name': 'gcc', 'state': 'present' }
    - { 'name': 'libcurl-devel', 'state': 'present' }
    - { 'name': 'openssl-devel', 'state': 'present' }

- name: Install pycurl
  pip:
    name: pycurl
    executable: '{{ python3_pip_executable }}'

- name: Install Jupyterhub
  pip:
    name: jupyterhub
    executable: '{{ python3_pip_executable }}'

- name: Install configurable-http-proxy
  npm:
    name: configurable-http-proxy
    state: present
    global: yes
    version: '{{ jupyterhub_chp_version }}'

- name: Create JupyterHub Config Directory
  file:
    path: '{{ jupyterhub_srv_dir }}'
    state: directory
    mode: '0755'

- name: Add Jupyterhub Config
  template:
    src: jupyterhub_config_base.py.j2
    dest: "{{ jupyterhub_srv_dir }}/jupyterhub_config.py"
    mode: 0644
    owner: root
    group: root
  notify:
    - Restart JupyterHub

- name: Jupyterhub Service config
  template:
    src: jupyterhub-env.j2
    dest: /etc/sysconfig/jupyterhub
    mode: 0600
    owner: root
    group: root
  notify:
    - Restart JupyterHub

- name: Jupyterhub Service definition
  template:
    src: jupyterhub.service.j2
    dest: /etc/systemd/system/jupyterhub.service
  notify:
    - Restart JupyterHub

- name: Configurable-HTTP-Proxy Service definition
  template: 
    src: configurable-http-proxy.service.j2
    dest: /etc/systemd/system/configurable-http-proxy.service
  notify:
    - Restart CHP

- name: Ensure jupyterhub_notebook_template_dir exists
  file:
    path: "{{ jupyterhub_notebook_template_dir }}"
    state: directory

- name: Copy jupyter notebook template
  template:
    src: "notebooks/notebook.html.j2"
    dest: "{{ jupyterhub_notebook_template_dir }}/notebook.html"

- name: Copy jupyter tree template
  template:
    src: "notebooks/tree.html.j2"
    dest: "{{ jupyterhub_notebook_template_dir }}/tree.html"

- name: Ensure jupyterhub_hub_template_dir exists
  file:
    path: "{{ jupyterhub_hub_template_dir }}"
    state: directory

- name: Copy jupyterhub error template
  template:
    src: "hub-error.html.j2"
    dest: "{{ jupyterhub_hub_template_dir }}/error.html"

- name: Start + Enable jupyterhub
  service:
    name: jupyterhub
    state: started
    enabled: yes

- name: Start + Enable Configurable-HTTP-Proxy
  service:
    name: configurable-http-proxy
    state: started
    enabled: yes

- name: Install jupyter container renice script
  copy:
    src: container_renice.sh
    dest: /usr/local/bin/container-renice
    mode: 0755
    owner: root
    group: root
